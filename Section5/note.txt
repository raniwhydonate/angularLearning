Angular gives us great tools to implement this flow. We can use property and event binding not only on HTML elements
and their native properties and events as we did thus far.
We can also use it on directives and we also did this with ngclass and  ngStyle that we use property binding.
But and that is important, we can also use it on our own components and bind
to our own custom properties and custom events. We can emit our own events.


________________________________        ________________________________    ________________________________
HTML Elements                  |        |          Directives          |   |         Components            |
                               |        |                              |   |                               |
Native Properties & Events     |        |  Custom Properties & Events  |   |  Custom Properties & Events   |
--------------------------------        --------------------------------    --------------------------------


EventEmitter is a generic type,which is indicated in TypeScript
by using this smaller than and greater than sign. And in between you simply define the type
of event data you're going to emit.

EventEmitter is an object in the angular framework
which allows you to emit your own events.





while of course these CSS files have the goal of encapsulating styles for the component they belong to,
this, again, is not a default behavior, Angular gives us this behavior.




you can override this encapsulation though.
back to the server element component
you can add something to the ad component decorator.
It's called encapsulation this property.


  encapsulation: ViewEncapsulation.None

we don't see these strange attributes being added to our elements.
this component doesn't use ViewEncapsulation

The other components still will use it there. You still see these attributes but if you now
define any styles for this component in these CSS file of this component they will actually get applied globally.


This is called "ShadowDom" instead of "Native" now - the functionality is the same though.
72. video   IMP for styling



remove the two-way binding.
There and the other option we would have is to place a local reference on that element.
A local reference can be placed on any HTML element,